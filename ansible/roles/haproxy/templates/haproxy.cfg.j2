global
    log 127.0.0.1:514 local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    mode tcp
    log global
    option tcplog
    option dontlognull
    option redispatch
    retries 3
    timeout connect {{ haproxy_connect_timeout | default('4000ms') }}
    timeout client {{ haproxy_client_timeout | default('50000ms') }}
    timeout server {{ haproxy_server_timeout | default('50000ms') }}
    maxconn 3000

# Kubernetes API Server Load Balancer
frontend kubernetes-apiserver-frontend
    bind *:6443
    mode tcp
    option tcplog
    default_backend kubernetes-apiserver-backend

backend kubernetes-apiserver-backend
    mode tcp
    balance {{ balance_method }}
    option tcp-check
    tcp-check connect
{% for host in groups['k8s-masters'] %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:{{ k8s_api_server_port }} check fall {{ health_check_fall }} rise {{ health_check_rise }}
{% endfor %}

# Kubernetes Ingress HTTP Load Balancer (NodePort 32624)
frontend kubernetes-ingress-http-frontend
    bind *:80
    mode tcp
    option tcplog
    default_backend kubernetes-ingress-http-backend

backend kubernetes-ingress-http-backend
    mode tcp
    balance {{ balance_method }}
{% for host in groups['k8s-workers'] %}
    server {{ host }}-http {{ hostvars[host]['ansible_host'] }}:{{ ingress_http_nodeport }} check fall {{ health_check_fall }} rise {{ health_check_rise }}
{% endfor %}

# Kubernetes Ingress HTTPS Load Balancer (NodePort 31316)
frontend kubernetes-ingress-https-frontend
    bind *:443
    mode tcp
    option tcplog
    default_backend kubernetes-ingress-https-backend

backend kubernetes-ingress-https-backend
    mode tcp
    balance {{ balance_method }}
{% for host in groups['k8s-workers'] %}
    server {{ host }}-https {{ hostvars[host]['ansible_host'] }}:{{ ingress_https_nodeport }} check fall {{ health_check_fall }} rise {{ health_check_rise }}
{% endfor %}

{% if haproxy_stats_enabled %}
# Stats page
listen stats
    bind *:{{ haproxy_stats_port }}
    stats enable
    stats uri {{ haproxy_stats_uri }}
    stats refresh 30s
    stats admin if TRUE
    stats auth {{ haproxy_stats_user }}:{{ haproxy_stats_password }}
{% endif %}
