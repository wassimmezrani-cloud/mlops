---
- name: Configure External Access for Monitoring Services
  hosts: k8s-masters[0]
  become: true
  tasks:
    - name: Configure kubectl to use HAProxy load balancer
      become_user: "{{ ansible_user }}"
      shell: |
        kubectl config set-cluster kubernetes \
          --server=https://{{ k8s_control_plane_endpoint }} \
          --kubeconfig=/home/{{ ansible_user }}/.kube/config
      register: kubeconfig_result
    
    - name: Verify cluster connectivity
      become_user: "{{ ansible_user }}"
      command: kubectl get nodes
      register: cluster_nodes
    
    - name: Display cluster status
      debug:
        msg: "Cluster connectivity verified"
    
    - name: Enable external access for Prometheus
      become_user: "{{ ansible_user }}"
      shell: kubectl patch svc prometheus-k8s -n monitoring -p '{"spec":{"type":"LoadBalancer"}}'
      register: prometheus_patch
      changed_when: "'patched' in prometheus_patch.stdout"
    
    - name: Enable external access for Grafana
      become_user: "{{ ansible_user }}"
      shell: kubectl patch svc grafana -n monitoring -p '{"spec":{"type":"LoadBalancer"}}'
      register: grafana_patch
      changed_when: "'patched' in grafana_patch.stdout"
    
    - name: Enable external access for AlertManager
      become_user: "{{ ansible_user }}"
      shell: kubectl patch svc alertmanager-main -n monitoring -p '{"spec":{"type":"LoadBalancer"}}'
      register: alertmanager_patch
      changed_when: "'patched' in alertmanager_patch.stdout"
    
    - name: Enable external access for Ingress Controller
      become_user: "{{ ansible_user }}"
      shell: kubectl patch svc ingress-nginx-controller -n ingress-nginx -p '{"spec":{"type":"LoadBalancer","externalTrafficPolicy":"Local"}}'
      register: ingress_patch
      changed_when: "'patched' in ingress_patch.stdout"
    
    - name: Wait for MetalLB to assign external IPs
      pause:
        seconds: 30
    
    - name: Get external services status
      become_user: "{{ ansible_user }}"
      shell: kubectl get svc --all-namespaces --field-selector spec.type=LoadBalancer
      register: external_services
    
    - name: Display external services
      debug:
        msg: "External services configured"
    
    - name: Display access information
      debug:
        msg: |
          Services are now accessible via external IPs:
          - Grafana: http://EXTERNAL-IP:3000 (admin/{{ grafana_admin_password }})
          - Prometheus: http://EXTERNAL-IP:9090
          - AlertManager: http://EXTERNAL-IP:9093
          - Ingress: http://EXTERNAL-IP